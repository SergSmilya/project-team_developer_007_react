{"version":3,"file":"static/js/418.c20b7889.chunk.js","mappings":"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","sources":["components/SignUpForm/SignUpForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://project-team_developer_007_react/./src/components/SignUpForm/SignUpForm.module.css?655f"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport sprite from '../../images/svg/sprite.svg';\nimport css from './SignUpForm.module.css';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst schema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup.string().min(6).required(),\n});\n\nexport const SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <section className={css.Registration__Section}>\n      <div className={css.Registration__container}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={handleFormSubmit}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form className={css.Registration__form}>\n              \n              <b className={css.Registration__title}>Registration</b>\n              \n              <label className={css.Registration__label}>\n                \n                <div className={css.Registration__inputwrapper}>\n                  <Field\n                    className={`${css.Registration__input} ${touched.name && errors.name\n                      ? `${css.Registration__input_error}`\n                      : touched.name && !errors.name && isSubmitting\n                        ? `${css.Registration__input_success}`\n                        : ''\n                      }`}\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    required\n                  />\n                  \n                  <svg width={18} height={18} className={css.Registration__svg}>\n                    <use href={sprite + '#reg-name'} />\n                  </svg>\n                </div>\n              </label>\n              \n              <label className={css.Registration__label}>\n                \n                <div className={css.Registration__inputwrapper}>\n                  <Field\n                    className={`${css.Registration__input} ${touched.email && errors.email\n                      ? `${css.Registration__input_error}`\n                      : touched.email && !errors.email && isSubmitting\n                        ? `${css.Registration__input_success}`\n                        : ''\n                      }`}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    render={msg => (\n                      <p className={css.Registration__error}>{msg}</p>\n                    )}\n                  />\n                  \n                  <svg width={18} height={18} className={css.Registration__svg}>\n                    <use href={sprite + '#reg-email'} />\n                  </svg>\n                </div>\n              </label>\n              \n              <label className={css.Registration__label}>\n                \n                <div className={css.Registration__inputwrapper}>\n                  <Field\n                    className={`${css.Registration__input} ${touched.password && errors.password\n                      ? `${css.Registration__input_error}`\n                      : touched.password && !errors.password && isSubmitting\n                        ? `${css.Registration__input_success}`\n                        : ''\n                      }`}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    render={msg => (\n                      <p className={css.Registration__error}>\n                        Enter a valid Password\n                      </p>\n                    )}\n                  />\n                  \n                  <svg width={18} height={18} className={css.Registration__svg}>\n                    <use href={sprite + '#reg-pass'} />\n                  </svg>\n                </div>\n              </label>\n\n              <button className={css.Registration__button} type=\"submit\">\n                Sign up\n              </button>\n            </Form>\n          )}\n        </Formik>\n        <Link className={css.Registration__link} to=\"/signin\">\n          Sign In\n        </Link>\n      </div>\n    </section>\n  );\n};\n","import { SignUpForm } from 'components/SignUpForm/SignUpForm';\nimport { useSelector } from 'react-redux';\nimport { selectAuthError } from 'redux/auth/selectors';\nimport Notiflix from 'notiflix';\n\nconst RegisterPage = () => {\n  const error = useSelector(selectAuthError);\n\n  if (!error) {\n    Notiflix.Notify.failure('Sorry, something went wrong');\n  }\n\n  return (\n    <>\n      <SignUpForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Registration__Section\":\"SignUpForm_Registration__Section__My4Ys\",\"Registration__container\":\"SignUpForm_Registration__container__ou-63\",\"Registration__form\":\"SignUpForm_Registration__form__vYYLk\",\"Registration__title\":\"SignUpForm_Registration__title__Q8P7x\",\"Registration__label\":\"SignUpForm_Registration__label__BIh-q\",\"Registration__input\":\"SignUpForm_Registration__input__woy2a\",\"Registration__button\":\"SignUpForm_Registration__button__K3mhK\",\"Registration__link\":\"SignUpForm_Registration__link__DIztg\",\"Registration__error\":\"SignUpForm_Registration__error__rF721\",\"Registration__input_success\":\"SignUpForm_Registration__input_success__OycYd\",\"Registration__input_error\":\"SignUpForm_Registration__input_error__9kTvw\",\"Registration__inputwrapper\":\"SignUpForm_Registration__inputwrapper__M5hn7\",\"Registration__svg\":\"SignUpForm_Registration__svg__XohDY\"};"],"names":["initialValues","name","email","password","schema","yup","shape","matches","required","min","SignUpForm","dispatch","useDispatch","className","css","validationSchema","validateOnChange","validateOnBlur","onSubmit","values","resetForm","register","errors","touched","isSubmitting","type","placeholder","width","height","href","sprite","render","msg","to","useSelector","selectAuthError","Notiflix"],"sourceRoot":""}