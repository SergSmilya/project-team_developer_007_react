{"version":3,"file":"static/js/857.70ffbce5.chunk.js","mappings":"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","sources":["webpack://project-team_developer_007_react/./src/components/MainPageTitle/mainPage.module.css?b47b","components/MainPageTitle/MainPageTitle.jsx","components/AddRecipe/recipeFormSchema.js","webpack://project-team_developer_007_react/./src/components/AddRecipe/descriptionFields/RecipeDescriptionFields.module.css?5a94","redux/categories/selectors.js","components/AddRecipe/descriptionFields/RecipeDescriptionFields.jsx","webpack://project-team_developer_007_react/./src/components/AddRecipe/ingredientFields/RecipeIngredientsFields.module.css?3aa2","redux/constants/index.js","components/AddRecipe/ingredientFields/RecipeIngredientsFields.jsx","webpack://project-team_developer_007_react/./src/components/AddRecipe/preparationFields/RecipePreparationFields.module.css?b45a","components/AddRecipe/preparationFields/RecipePreparationFields.jsx","webpack://project-team_developer_007_react/./src/components/AddRecipe/AddRecipeComponents.module.css?8a90","components/AddRecipe/AddRecipeForm.jsx","components/AddRecipe/FollowUsBlock.jsx","components/AddRecipe/PopularRecipe.jsx","webpack://project-team_developer_007_react/./src/pages/AddRecipePage/AddRecipePage.module.css?5b41","pages/AddRecipePage/AddRecipePage.jsx","redux/myRecipes/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"mainPage_title__NkTqx\",\"firstGreen\":\"mainPage_firstGreen__OVjdr\",\"black\":\"mainPage_black__JMHNO\",\"lastGreen\":\"mainPage_lastGreen__7VLZZ\"};","import css from './mainPage.module.css'\nexport const MainPageTitle = ({ text }) => {\n    return (\n        <>\n            <h1 className={css.title}>{text}</h1>\n                <svg className={css.firstGreen} width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect y=\"2.84525\" width=\"8\" height=\"8\" rx=\"3\" transform=\"rotate(-25 0 2.84525)\" fill=\"#8BAA36\" />\n                </svg>\n                <svg className={css.black}  width=\"7\" height=\"7\" viewBox=\"0 0 7 7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect y=\"2\" width=\"6\" height=\"6\" rx=\"3\" transform=\"rotate(-25 0 2)\" fill=\"#22252A\" />\n                </svg>\n                <svg className={css.lastGreen}  width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect y=\"2.84525\" width=\"8\" height=\"8\" rx=\"3\" transform=\"rotate(-25 0 2.84525)\" fill=\"#8BAA36\" />\n                </svg>\n          \n            \n        </>\n    )\n    \n}","import * as yup from \"yup\";\n\nexport const recipeFormSchema = yup.object().shape({\n    img: yup.string().required(\"Image is required\"),\n    title: yup.string().typeError(\"Should be a string\").required(\"Title is required\"),\n    description: yup\n        .string()\n        .typeError(\"Should be a string\")\n        .required(\"Description is required\"),\n        cookingTime: yup.string(),\n    category: yup.string(),\n    ingredients: yup\n        .array()\n        .of(\n        yup.object({\n            name: yup.string().required(\"Ingredient name is required\"),\n            ingredientsQuantity: yup.string().required(\"Ingredient quantity is required\"),\n            ingredientsQuantityMeasure: yup.string(),\n            id: yup.string(),\n        })\n        )\n        .required(\"Ingredients is required\"),\n        preparation: yup.string().required(\"Preparation text is required\"),\n});","// extracted by mini-css-extract-plugin\nexport default {\"descriptionFieldWrapper\":\"RecipeDescriptionFields_descriptionFieldWrapper__OllyZ\",\"imgWrapper\":\"RecipeDescriptionFields_imgWrapper__PThwi\",\"imgInput\":\"RecipeDescriptionFields_imgInput__hs24V\",\"mockImg\":\"RecipeDescriptionFields_mockImg__LkiOa\",\"recipeImg\":\"RecipeDescriptionFields_recipeImg__NeH-m\",\"inputBox\":\"RecipeDescriptionFields_inputBox__S5ETY\",\"inputRaw\":\"RecipeDescriptionFields_inputRaw__4EWRb\",\"selectBox\":\"RecipeDescriptionFields_selectBox__Zi2-P\",\"selectLabel\":\"RecipeDescriptionFields_selectLabel__Hx9Qt\",\"selectVariantsBox\":\"RecipeDescriptionFields_selectVariantsBox__M1-9-\",\"arrow\":\"RecipeDescriptionFields_arrow__s+6oQ\",\"selectVariants\":\"RecipeDescriptionFields_selectVariants__xv5ae\",\"selectList\":\"RecipeDescriptionFields_selectList__nuUTP\",\"selectItem\":\"RecipeDescriptionFields_selectItem__rRTPj\",\"errorMsg\":\"RecipeDescriptionFields_errorMsg__JCF6Y\",\"inputsWrapper\":\"RecipeDescriptionFields_inputsWrapper__Jv0zK\"};","export const selectCategories = state => state.categories.categoryList;\n\nexport const selectCategoriesIsLoading = state => state.categories.isLoading;\n\nexport const selectCategoriesError = state => state.categories.error;\n","import css from './RecipeDescriptionFields.module.css';\nimport { MdKeyboardArrowDown } from 'react-icons/md';\nimport addImg from '../../../images/addrecipe/add_photo_icon_x2.png'\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectCategories } from '../../../redux/categories/selectors';\nimport { fetchCategories } from '../../../redux/categories/operations';\n\nconst makeTimeArr = () => {\n  const arr = [];\n  for (let i = 5; i <= 120; i += 5) {\n    arr.push(i);\n  }\n  return arr;\n};\nconst cookingTime = makeTimeArr();\n\nexport const RecipeDescriptionFields = ({\n  title,\n  description,\n  time,\n  category,\n  onInputImgUpload,\n  onTitleChange,\n  onDescriptionChange,\n  onTimeChange,\n  onCategoryChange,\n  errors,\n}) => {\n  const dispatch = useDispatch();\n  const categoriesList = useSelector(selectCategories);\n  console.log(categoriesList);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n\n  const [imgs, setImgs] = useState('');\n  const [timeSelectIsActive, setTimeSelectIsActive] = useState(false);\n  const [categorySelectIsActive, setCategorySelectIsActive] = useState(false);\n\n  const onFileInputChange = e => {\n    const uploadImg = e.target.files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', e => {\n      const buffer = e.target.result;\n      const imgFile = new File([buffer], { type: uploadImg.type });\n      const url = URL.createObjectURL(imgFile);\n      setImgs(url);\n    });\n    reader.readAsArrayBuffer(uploadImg);\n\n    onInputImgUpload(e);\n  };\n\n  const toggleCategory = () => {\n    setCategorySelectIsActive(!categorySelectIsActive);\n  };\n\n  const setCategory = value => {\n    onCategoryChange(value);\n    setCategorySelectIsActive(false);\n  };\n\n  const toggleCookingTime = () => {\n    setTimeSelectIsActive(!timeSelectIsActive);\n  };\n\n  const setCookingTime = value => {\n    onTimeChange(value);\n    setTimeSelectIsActive(false);\n  };\n  console.log(imgs);\n  return (\n    <div className={css.descriptionFieldWrapper}>\n      <div className={css.imgWrapper} onChange={e => onFileInputChange(e)}>\n        <label htmlFor=\"dishImg\">\n          <img className={css.mockImg} src={`${addImg}`} alt=\"addphoto\" />\n        </label>\n        <input\n          className={css.imgInput}\n          type=\"file\"\n          accept=\".jpg, .jpeg, .png\"\n          id=\"dishImg\"\n        />\n        {imgs && <img className={css.recipeImg} src={imgs} alt=\"recipeImage\" />}\n        {errors.imgs && <p className={css.errorMsg}>{errors.imgs}</p>}\n      </div>\n\n      <div className={css.inputsWrapper}>\n        <div className={css.inputBox}>\n          <input\n            className={css.inputRaw}\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter item title\"\n            onChange={e => onTitleChange(e.target.value)}\n            value={title}\n          />\n          {errors.title && <p className={css.errorMsg}>{errors.title}</p>}\n        </div>\n        <div className={css.inputBox}>\n          <input\n            className={css.inputRaw}\n            type=\"text\"\n            id=\"about\"\n            name=\"about\"\n            placeholder=\"Enter about recipe\"\n            onChange={e => onDescriptionChange(e.target.value)}\n            value={description}\n          />\n          {errors.description && (\n            <p className={css.errorMsg}>{errors.description}</p>\n          )}\n        </div>\n        <div className={css.selectBox} onClick={toggleCategory}>\n          <div className={css.selectLabel}>Category</div>\n          <div className={css.selectVariantsBox}>\n            <span className={css.selectVariants}>{category}</span>\n            <MdKeyboardArrowDown className={css.arrow} size=\"18\" />\n          </div>\n          {categorySelectIsActive && (\n            <ul className={css.selectList}>\n              {categoriesList.map((item, index) => (\n                <li\n                  className={css.selectItem}\n                  key={item._id}\n                  onClick={() => setCategory(item.name)}\n                >\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className={css.selectBox} onClick={toggleCookingTime}>\n          <div className={css.selectLabel}>Cooking time</div>\n          <div className={css.selectVariantsBox}>\n            <span className={css.selectVariants}>{time}</span>\n            <MdKeyboardArrowDown className={css.arrow} size=\"18\" />\n          </div>\n          {timeSelectIsActive && (\n            <ul className={css.selectList}>\n              {cookingTime.map(item => (\n                <li\n                  className={css.selectItem}\n                  key={item}\n                  onClick={() => setCookingTime(item)}\n                >\n                  {item}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ingredientsFieldWrapper\":\"RecipeIngredientsFields_ingredientsFieldWrapper__7nfJt\",\"subtitle\":\"RecipeIngredientsFields_subtitle__1ZGFR\",\"subtitleWrapper\":\"RecipeIngredientsFields_subtitleWrapper__SfGmt\",\"ingredientsCounter\":\"RecipeIngredientsFields_ingredientsCounter__nN9uc\",\"counterBtn\":\"RecipeIngredientsFields_counterBtn__IkHfo\",\"counterBtnIcon\":\"RecipeIngredientsFields_counterBtnIcon__qPiY0\",\"counterValue\":\"RecipeIngredientsFields_counterValue__OM8mo\",\"ingredientItem\":\"RecipeIngredientsFields_ingredientItem__HjtdF\",\"ingredientNameField\":\"RecipeIngredientsFields_ingredientNameField__srmHQ\",\"ingredientInputBox\":\"RecipeIngredientsFields_ingredientInputBox__5j0ek\",\"ingredientNameInput\":\"RecipeIngredientsFields_ingredientNameInput__t8j40\",\"selectIngredients\":\"RecipeIngredientsFields_selectIngredients__cTPG+\",\"selectIngredientItem\":\"RecipeIngredientsFields_selectIngredientItem__IYGbG\",\"ingredientQuantityField\":\"RecipeIngredientsFields_ingredientQuantityField__vGfAg\",\"ingredientQuantityInput\":\"RecipeIngredientsFields_ingredientQuantityInput__4ivy3\",\"selectBox\":\"RecipeIngredientsFields_selectBox__wSTHA\",\"arrow\":\"RecipeIngredientsFields_arrow__0afm7\",\"arrowIngr\":\"RecipeIngredientsFields_arrowIngr__2RFdn\",\"selectLabel\":\"RecipeIngredientsFields_selectLabel__paEGl\",\"selectQuantityList\":\"RecipeIngredientsFields_selectQuantityList__s8IwP\",\"selectQuantityItem\":\"RecipeIngredientsFields_selectQuantityItem__qidO3\",\"deleteBtn\":\"RecipeIngredientsFields_deleteBtn__dOAYE\",\"deleteBtnIcon\":\"RecipeIngredientsFields_deleteBtnIcon__Yxm5n\",\"errorMsg\":\"RecipeIngredientsFields_errorMsg__k3PKf\"};","const categories = require('./categories.json').map(el => el.name);\nconst ingredients = require('./ingredients.json').map(el => el.name);\nconst recipes = require('./recipes.json');\n\nexport const constants = {\n  recipes,\n  categories,\n  ingredients,\n};\n","import { useState } from 'react';\nimport css from './RecipeIngredientsFields.module.css';\n\nimport {\n  MdRemove,\n  MdAdd,\n  MdKeyboardArrowDown,\n  MdOutlineClose,\n} from 'react-icons/md';\n\nimport { constants } from '../../../redux/constants';\n\n\nexport const RecipeIngredientsFields = ({\n  ingredients,\n  incrIngredientFields,\n  decrIngredientFields,\n  deleteIngredient,\n  updateIngredient,\n  updateErrors,\n  errors,\n}) => {\n  const ingredientList = constants.ingredients;\n  console.log('LIST', ingredientList);\n\n  console.log('INGREDIENTS', ingredients);\n  const ingredientsQuantityMeasure = [\n    'tbs',\n    'tsp',\n    'kg',\n    'g',\n    'ml',\n    'pcs',\n    'to taste',\n  ];\n  const [field, setFields] = useState(1);\n  const [quantityIsActive, setQuantityIsActive] = useState(\n    new Array(ingredients.length).fill(''));\n  const [ingredientIsActive, setIngredientIsActive] = useState(\n    new Array(ingredients.length).fill('')\n  );\n\n  const [filteredIngredients, setFilteredIngredients] =\n    useState(ingredientList);\n\n  const incrementFields = () => {\n    incrIngredientFields();\n    setFields(prevState => prevState + 1);\n  };\n\n  const decrementFields = () => {\n    if (field === 0) {\n      return;\n    }\n    decrIngredientFields();\n    setFields(prevState => prevState - 1);\n  };\n\n  const deleteField = (itemId, index) => {\n    deleteIngredient(itemId);\n    setFields(prevState => prevState - 1);\n\n    setIngredientIsActive(prevState => {\n      const newState = [...prevState];\n      newState[index] = false;\n      return newState;\n    });\n  };\n\n  const toggleQuantity = index => {\n    setQuantityIsActive(prevState => {\n      const newState = [...prevState];\n      newState[index] = !newState[index];\n      return newState;\n    });\n  };\n\n  const setQuantityMeasure = (index, value, id) => {\n    console.log('Set quantity', {id, value})\n    setQuantityIsActive(prevState => {\n      const newState = [...prevState];\n      newState[index] = !newState[index];\n      return newState;\n    });\n\n    updateIngredient(index, value, id, 'ingredientsQuantityMeasure');\n  };\n\n  const changeQuantity = (index, value, id) => {\n    console.log('Quantity', { index, value })\n    updateIngredient(index, value, id, 'ingredientsQuantity');\n    updateErrors([`ingredients[${index}].ingredientQuantity`]);\n  };\n\n  const onInputChange = (index, value, id) => {\n    setIngredientIsActive(prevState => {\n      const newState = [...prevState];\n      newState[index] = true;\n      return newState;\n    });\n\n    setFilteredIngredients(\n      ingredientList.filter(item =>\n        item.toLowerCase().includes(value.toLowerCase())\n      )\n    );\n\n    updateIngredient(index, value, id, 'name');\n\n    updateErrors([`ingredients[${index}]`]);\n  };\n\n  const setIngredient = (index, value, id) => {\n    updateIngredient(index, value, id, 'name');\n\n    setIngredientIsActive(prevState => {\n      const newState = [...prevState];\n      newState[index] = false;\n      return newState;\n    });\n  };\n\n  return (\n    <div className={css.ingredientsFieldWrapper}>\n      <div className={css.subtitleWrapper}>\n        <h3 className={css.subtitle}>Ingredients</h3>\n        <div className={css.ingredientsCounter}>\n          <button\n            className={css.counterBtn}\n            type=\"button\"\n            onClick={decrementFields}\n          >\n            <MdRemove className={css.counterBtnIcon} size=\"14\" />\n          </button>\n          <p className={css.counterValue}>{field}</p>\n          <button\n            className={css.counterBtn}\n            type=\"button\"\n            onClick={incrementFields}\n          >\n            <MdAdd className={css.counterBtnIcon} size=\"14\" />\n          </button>\n        </div>\n      </div>\n      <ul className={css.ingredientsList}>\n        {ingredients.map((ingredient, index) => {\n          return (\n            <li className={css.ingredientItem} key={ingredient.id}>\n              <div className={css.ingredientNameField}>\n                <div>\n                  <div className={css.ingredientInputBox}>\n                    <input\n                      className={css.ingredientNameInput}\n                      autoFocus={true}\n                      value={ingredient.name}\n                      onChange={e => onInputChange(index, e.target.value, ingredient.id)}\n                    />\n                    <MdKeyboardArrowDown className={css.arrowIngr} size=\"18\" />\n                  </div>\n                  {errors[`ingredients[${index}]`] && (\n                    <p className={css.errorMsg}>\n                      {errors[`ingredients[${index}]`]}\n                    </p>\n                  )}\n                  {ingredientIsActive[index] && (\n                    <ul className={css.selectIngredients}>\n                      {filteredIngredients.map(item => (\n                        <li\n                          className={css.selectIngredientItem}\n                          key={item}\n                          onClick={() =>\n                            setIngredient(index, item, ingredient.id)\n                          }\n                        >\n                          {item}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                  \n                </div>\n                <div className={css.ingredientQuantityField}>\n                  <input\n                    className={css.ingredientQuantityInput}\n                    type=\"number\"\n                    value={ingredient.ingredientsQuantity}\n                    onChange={e => changeQuantity(index, e.target.value, ingredient.id)}\n                  />\n                  <div\n                    className={css.selectBox}\n                    onClick={() => toggleQuantity(index)}\n                  >\n                    <span className={css.selectLabel}>\n                      {ingredient.ingredientsQuantityMeasure}\n                    </span>\n                    <MdKeyboardArrowDown className={css.arrow} size=\"18\" />\n                  </div>\n                  {quantityIsActive[index] && (\n                    <ul className={css.selectQuantityList}>\n                      {ingredientsQuantityMeasure.map(item => (\n                        <li\n                          className={css.selectQuantityItem}\n                          key={item}\n                          onClick={() => setQuantityMeasure(index, item, ingredient.id)}\n                        >\n                          {item}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                  {errors[\n                    `ingredients[${index}].ingredientsQuantity`\n                  ] && (\n                    <p className={css.errorMsg}>\n                      {' '}\n                      {\n                        errors[\n                          `ingredients[${index}].ingredientsQuantity`\n                        ]\n                      }{' '}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <button\n                className={css.deleteBtn}\n                type=\"button\"\n                onClick={() => deleteField(ingredient.id, index)}\n              >\n                <MdOutlineClose className={css.deleteBtnIcon} size=\"18px\" />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"RecipePreparationFields_subtitle__5jg8a\",\"recipeTextarea\":\"RecipePreparationFields_recipeTextarea__gE981\",\"errorText\":\"RecipePreparationFields_errorText__viRuP\"};","import css from \"./RecipePreparationFields.module.css\";\nimport { useState } from \"react\";\n\nexport const RecipePreparationFields = ({\n    onPreparationTextChange,\n    preparation,\n    errors,\n}) => {\n    const [prepText, setPrepText] = useState(\"\");\n\n    const handleKeyDown = (e) => {\n        let prepProcess = prepText;\n        if (e.key === \"Enter\") {\n        prepProcess = prepText.split(\"\\n\").join(\", \");\n        }\n        onPreparationTextChange(prepProcess);\n    };\n\n    const handleChange = (e) => {\n        setPrepText(e.target.value);\n    };\n\n     return (\n    <div className={css.preparationFieldWrapper}>\n        <h3 className={css.subtitle}>Recipe Preparation</h3>\n        <textarea\n        className={css.recipeTextarea}\n        name=\"recipe\"\n        id=\"recipe\"\n        placeholder=\"Enter recipe\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        value={prepText}\n             />\n        {errors.preparation && <p className={css.errorText}>{errors.preparation}</p>}\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"addSectionWrap\":\"AddRecipeComponents_addSectionWrap__cl+na\",\"addRecipeForm\":\"AddRecipeComponents_addRecipeForm__VEcmL\",\"addButton\":\"AddRecipeComponents_addButton__caTT4\"};","import React from 'react';\nimport { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addMyRecipe } from '../../redux/myRecipes/operations';\nimport { selectMyRecipesError } from '../../redux/myRecipes/selectors';\n\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { recipeFormSchema } from './recipeFormSchema';\n\nimport { RecipeDescriptionFields } from './descriptionFields/RecipeDescriptionFields';\nimport { RecipeIngredientsFields } from './ingredientFields/RecipeIngredientsFields';\nimport { RecipePreparationFields } from './preparationFields/RecipePreparationFields';\n\nimport css from './AddRecipeComponents.module.css';\n\nexport const AddRecipeForm = () => {\n  const [img, setImg] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('Breakfast');\n  const [cookingTime, setCookingTime] = useState('30 min');\n  const [ingredients, setIngredients] = useState([\n    {\n      id: nanoid(),\n      ingredientsQuantityMeasure: 'tbs',\n      ingredientsQuantity: 0,\n      name: '',\n    },\n  ]);\n  const [preparation, setPreparation] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const onInputImgUpload = e => {\n    setImg(e.target.files[0]);\n    updateErrors('img');\n  };\n\n  const onTitleChange = value => {\n    setTitle(value);\n    updateErrors('title');\n  };\n\n  const onDescriptionChange = value => {\n    setDescription(value);\n    updateErrors('description');\n  };\n\n  const onCategoryChange = value => {\n    setCategory(value);\n  };\n\n  const onTimeChange = value => {\n    setCookingTime(value);\n  };\n\n  const incrIngredientFields = () => {\n    setIngredients(prevState => [\n      ...prevState,\n      {\n        id: nanoid(),\n        ingredientsQuantityMeasure: 'tbs',\n        ingredientsQuantity: 0,\n        name: '',\n      },\n    ]);\n  };\n\n  const decrIngredientFields = () => {\n    const lastField = ingredients[ingredients.length - 1];\n    setIngredients(prevState =>\n      prevState.filter(item => {\n        return item.id !== lastField.id;\n      })\n    );\n  };\n\n  const deleteIngredient = itemId => {\n    setIngredients(ingredients.filter(item => item.id !== itemId));\n  };\n\n  const updateIngredient = (index, value, id, prop) => {\n    console.log('ADD', { index, value, id, prop })\n\n    setIngredients(prevState => {\n      console.log('STATE', prevState)\n      const newState = [...prevState];\n      newState[index][prop] = value;\n      newState[index].id = id;\n      return newState;\n    });\n  };\n\n  const onPreparationTextChange = data => {\n    setPreparation(data);\n    updateErrors('preparation');\n  };\n\n  const navigate = useNavigate();\n\n  const updatedIngredients = useMemo(\n    () =>\n      ingredients.map(ingredient => {\n        const { id, ingredientsQuantity, ingredientsQuantityMeasure } =\n          ingredient;\n        const measure = `${ingredientsQuantity} ${ingredientsQuantityMeasure}`;\n        return { measure: measure, id: id };\n      }),\n    [ingredients]\n  );\n\n  const initVal = {\n    img,\n    title,\n    description,\n    cookingTime,\n    category,\n    ingredients,\n    preparation,\n  };\n\n  const formData = new FormData();\n  formData.append('img', img);\n  formData.append('title', title);\n  formData.append('description', description);\n  formData.append('category', category);\n  formData.append('time', cookingTime);\n  formData.append('ingredients', JSON.stringify(updatedIngredients));\n  formData.append('instructions', preparation);\n\n  const dispatch = useDispatch();\n  const error = useSelector(selectMyRecipesError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    recipeFormSchema\n      .validate(initVal, { abortEarly: false })\n      .then(() => {\n        dispatch(addMyRecipe(formData))\n          .unwrap()\n          .then(() => {\n            navigate('/my', { replace: true });\n            Notify.success('Hooray! The recipe was successfully added');\n          })\n          .catch(error => {\n            Notify.error('Ooops, smth is going wrong... Try again!');\n          });\n      })\n      .catch(err => {\n        const errors = err.inner.reduce(\n          (acc, err) => ({ ...acc, [err.path]: err.message }),\n          {}\n        );\n        setErrors(errors);\n      });\n  };\n\n  const updateErrors = value => {\n    setErrors(prevState => ({ ...prevState, [value]: '' }));\n  };\n\n  console.log(error);\n\n  return (\n    <div className={css.addSectionWrap}>\n      <form className={css.addRecipeForm} onSubmit={handleSubmit}>\n        <RecipeDescriptionFields\n            title={title}\n            description={description}\n            time={cookingTime}\n            category={category}\n            onInputImgUpload={onInputImgUpload}\n            onTitleChange={onTitleChange}\n            onDescriptionChange={onDescriptionChange}\n            onCategoryChange={onCategoryChange}\n            onTimeChange={onTimeChange}\n            errors={errors}\n        />\n\n        <RecipeIngredientsFields\n            ingredients={ingredients}\n            incrIngredientFields={incrIngredientFields}\n            decrIngredientFields={decrIngredientFields}\n            deleteIngredient={deleteIngredient}\n            updateIngredient={updateIngredient}\n            updateErrors={updateErrors}\n            errors={errors}\n        />\n        <RecipePreparationFields\n            onPreparationTextChange={onPreparationTextChange}\n            preparation={preparation}\n            errors={errors}\n        />\n        <button className={css.addButton} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { FollowUs } from '../Footer/FollowUs/FollowUs';\nimport css from './AddRecipeComponents.module.css';\n\nexport const FollowUsBlock = () => {\n  <div className={css.socialsWrapper}>\n    <h3 className={css.subtitle}> Follow us </h3>\n    <FollowUs />\n  </div>;\n};\n","export default function PopularRecipe() {\r\n  return <div>PopularRecipe</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddRecipePage_wrapper__8rLIM\",\"pageContent\":\"AddRecipePage_pageContent__6accz\",\"formContainer\":\"AddRecipePage_formContainer__TEeEs\",\"sidebar\":\"AddRecipePage_sidebar__1uoTZ\"};","// import { AddRecipeForm } from '../../Components/AddRecipeForm/AddRecipeForm';\nimport { AddRecipeForm } from 'components/AddRecipe/AddRecipeForm';\nimport { FollowUsBlock } from 'components/AddRecipe/FollowUsBlock';\nimport { MainPageTitle } from '../../components/MainPageTitle/MainPageTitle';\nimport PopularRecipe from 'components/AddRecipe/PopularRecipe';\n\nimport css from './AddRecipePage.module.css';\n\nconst AddRecipePage = () => {\n  return (\n    <div className={css.wrapper}>\n      <section className={css.pageContent}>\n        {/* <MainTitleWrapper /> */}\n        <MainPageTitle text=\"Add recipe\" />\n        <div className={css.formContainer}>\n          <AddRecipeForm />\n          <div className={css.sidebar}>\n            <FollowUsBlock />\n            <PopularRecipe />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default AddRecipePage;\n","export const selectMyRecipes = state => state.myRecipes.availableRecipes;\n\nexport const selectMyRecipesIsLoading = state => state.myRecipes.isLoading;\n\nexport const selectMyRecipesError = state => state.myRecipes.error;\n"],"names":["MainPageTitle","text","className","css","width","height","viewBox","fill","xmlns","y","rx","transform","recipeFormSchema","yup","shape","img","required","title","typeError","description","cookingTime","category","ingredients","of","name","ingredientsQuantity","ingredientsQuantityMeasure","id","preparation","selectCategories","state","categories","categoryList","arr","i","push","makeTimeArr","RecipeDescriptionFields","time","onInputImgUpload","onTitleChange","onDescriptionChange","onTimeChange","onCategoryChange","errors","dispatch","useDispatch","categoriesList","useSelector","console","log","useEffect","fetchCategories","useState","imgs","setImgs","timeSelectIsActive","setTimeSelectIsActive","categorySelectIsActive","setCategorySelectIsActive","onChange","e","uploadImg","target","files","reader","FileReader","addEventListener","buffer","result","imgFile","File","type","url","URL","createObjectURL","readAsArrayBuffer","onFileInputChange","htmlFor","src","alt","accept","placeholder","value","onClick","size","map","item","index","_id","require","el","constants","recipes","RecipeIngredientsFields","incrIngredientFields","decrIngredientFields","deleteIngredient","updateIngredient","updateErrors","ingredientList","field","setFields","Array","length","quantityIsActive","setQuantityIsActive","ingredientIsActive","setIngredientIsActive","filteredIngredients","setFilteredIngredients","prevState","ingredient","autoFocus","newState","filter","toLowerCase","includes","onInputChange","setIngredient","changeQuantity","toggleQuantity","setQuantityMeasure","itemId","deleteField","RecipePreparationFields","onPreparationTextChange","prepText","setPrepText","onKeyDown","prepProcess","key","split","join","AddRecipeForm","setImg","setTitle","setDescription","setCategory","setCookingTime","nanoid","setIngredients","setPreparation","setErrors","navigate","useNavigate","updatedIngredients","useMemo","measure","initVal","formData","FormData","append","JSON","stringify","error","selectMyRecipesError","onSubmit","preventDefault","abortEarly","then","addMyRecipe","unwrap","replace","Notify","catch","err","inner","reduce","acc","path","message","lastField","prop","data","FollowUsBlock","FollowUs","PopularRecipe","selectMyRecipesIsLoading","myRecipes","isLoading"],"sourceRoot":""}