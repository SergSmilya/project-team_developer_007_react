{"version":3,"file":"static/js/418.3ec18a88.chunk.js","mappings":"+QAOMA,EAAgB,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAIjDC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,QAHF,8CAGuB,sBAAsBC,WAC/DL,SAAUE,EAAAA,KAAaI,IAAI,GAAGD,aAGnBE,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,oBAASC,UAAWC,EAAAA,EAAAA,sBAApB,UACE,iBAAKD,UAAWC,EAAAA,EAAAA,wBAAhB,WACE,SAAC,KAAD,CACEd,cAAeA,EACfe,iBAAkBX,EAClBY,kBAAkB,EAClBC,gBAAgB,EAChBC,SAbiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAClCT,GAASU,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAKK,SAOG,gBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,aAApB,OACC,UAAC,KAAD,CAAMX,UAAWC,EAAAA,EAAAA,mBAAjB,WACE,cAAGD,UAAWC,EAAAA,EAAAA,oBAAd,SAAuC,kBACvC,kBAAOD,UAAWC,EAAAA,EAAAA,oBAAlB,UACE,SAAC,KAAD,CACED,UAAS,UAAKC,EAAAA,EAAAA,oBAAL,YACPS,EAAQtB,MAAQqB,EAAOrB,KAAvB,UACOa,EAAAA,EAAAA,2BACHS,EAAQtB,OAASqB,EAAOrB,MAAQuB,EAAhC,UACGV,EAAAA,EAAAA,6BACH,IAENW,KAAK,OACLxB,KAAK,OACLyB,YAAY,OACZlB,UAAQ,OAGZ,mBAAOK,UAAWC,EAAAA,EAAAA,oBAAlB,WACE,SAAC,KAAD,CACED,UAAS,UAAKC,EAAAA,EAAAA,oBAAL,YACPS,EAAQrB,OAASoB,EAAOpB,MAAxB,UACOY,EAAAA,EAAAA,2BACHS,EAAQrB,QAAUoB,EAAOpB,OAASsB,EAAlC,UACGV,EAAAA,EAAAA,6BACH,IAENW,KAAK,QACLxB,KAAK,QACLyB,YAAY,QACZlB,UAAQ,KAEV,SAAC,KAAD,CACEP,KAAK,QACL0B,OAAQ,SAAAC,GAAG,OACT,cAAGf,UAAWC,EAAAA,EAAAA,oBAAd,SAAwCc,GAD/B,QAKf,mBAAOf,UAAWC,EAAAA,EAAAA,oBAAlB,WACE,SAAC,KAAD,CACED,UAAS,UAAKC,EAAAA,EAAAA,oBAAL,YACPS,EAAQpB,UAAYmB,EAAOnB,SAA3B,UACOW,EAAAA,EAAAA,2BACHS,EAAQpB,WAAamB,EAAOnB,UAAYqB,EAAxC,UACGV,EAAAA,EAAAA,6BACH,IAENW,KAAK,WACLxB,KAAK,WACLyB,YAAY,WACZlB,UAAQ,KAEV,SAAC,KAAD,CACEP,KAAK,WACL0B,OAAQ,SAAAC,GAAG,OACT,cAAGf,UAAWC,EAAAA,EAAAA,oBAAd,SAAuC,0BAD9B,QAQf,mBAAQD,UAAWC,EAAAA,EAAAA,qBAA0BW,KAAK,SAAlD,SAA2D,cA/D9D,KAqEH,SAAC,KAAD,CAAMZ,UAAWC,EAAAA,EAAAA,mBAAwBe,GAAG,UAA5C,SAAsD,gBAM7D,ECnGD,EARqB,WACnB,OACE,+BACE,SAACnB,EAAD,KAGL,C,qBCPD,KAAgB,sBAAwB,0CAA0C,wBAA0B,4CAA4C,mBAAqB,uCAAuC,oBAAsB,wCAAwC,oBAAsB,wCAAwC,oBAAsB,wCAAwC,qBAAuB,yCAAyC,mBAAqB,uCAAuC,oBAAsB,wCAAwC,4BAA8B,gDAAgD,0BAA4B,8C","sources":["components/SignUpForm/SignUpForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://project-team_developer_007_react/./src/components/SignUpForm/SignUpForm.module.css?655f"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './SignUpForm.module.css';\n\nconst initialValues = { name: '', email: '', password: '' };\n\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst schema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup.string().min(6).required(),\n});\n\nexport const SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <section className={css.Registration__Section}>\n      <div className={css.Registration__container}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={handleFormSubmit}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form className={css.Registration__form}>\n              <b className={css.Registration__title}>Registration</b>\n              <label className={css.Registration__label}>\n                <Field\n                  className={`${css.Registration__input} ${\n                    touched.name && errors.name\n                      ? `${css.Registration__input_error}`\n                      : touched.name && !errors.name && isSubmitting\n                      ? `${css.Registration__input_success}`\n                      : ''\n                  }`}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  required\n                />\n              </label>\n              <label className={css.Registration__label}>\n                <Field\n                  className={`${css.Registration__input} ${\n                    touched.email && errors.email\n                      ? `${css.Registration__input_error}`\n                      : touched.email && !errors.email && isSubmitting\n                      ? `${css.Registration__input_success}`\n                      : ''\n                  }`}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  render={msg => (\n                    <p className={css.Registration__error}>{msg}</p>\n                  )}\n                />\n              </label>\n              <label className={css.Registration__label}>\n                <Field\n                  className={`${css.Registration__input} ${\n                    touched.password && errors.password\n                      ? `${css.Registration__input_error}`\n                      : touched.password && !errors.password && isSubmitting\n                      ? `${css.Registration__input_success}`\n                      : ''\n                  }`}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  render={msg => (\n                    <p className={css.Registration__error}>\n                      Enter a valid Password\n                    </p>\n                  )}\n                />\n              </label>\n\n              <button className={css.Registration__button} type=\"submit\">\n                Sign up\n              </button>\n            </Form>\n          )}\n        </Formik>\n        <Link className={css.Registration__link} to=\"/signin\">\n          Sign In\n        </Link>\n      </div>\n    </section>\n  );\n};\n","import { SignUpForm } from 'components/SignUpForm/SignUpForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <SignUpForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Registration__Section\":\"SignUpForm_Registration__Section__My4Ys\",\"Registration__container\":\"SignUpForm_Registration__container__ou-63\",\"Registration__form\":\"SignUpForm_Registration__form__vYYLk\",\"Registration__title\":\"SignUpForm_Registration__title__Q8P7x\",\"Registration__label\":\"SignUpForm_Registration__label__BIh-q\",\"Registration__input\":\"SignUpForm_Registration__input__woy2a\",\"Registration__button\":\"SignUpForm_Registration__button__K3mhK\",\"Registration__link\":\"SignUpForm_Registration__link__DIztg\",\"Registration__error\":\"SignUpForm_Registration__error__rF721\",\"Registration__input_success\":\"SignUpForm_Registration__input_success__OycYd\",\"Registration__input_error\":\"SignUpForm_Registration__input_error__9kTvw\"};"],"names":["initialValues","name","email","password","schema","yup","shape","matches","required","min","SignUpForm","dispatch","useDispatch","className","css","validationSchema","validateOnChange","validateOnBlur","onSubmit","values","resetForm","register","errors","touched","isSubmitting","type","placeholder","render","msg","to"],"sourceRoot":""}